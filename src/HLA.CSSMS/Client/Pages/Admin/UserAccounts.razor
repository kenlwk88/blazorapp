@page "/admin/user-accounts"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Policy = "IsSuperAdmin")]

<h3>User Accounts</h3>

@if (showError)
{
    <div class="alert alert-danger" role="alert">
        <div>@message</div>
    </div>
}

@if (showInfo)
{
    <div class="alert alert-info" role="alert">
        <div>@message</div>
    </div>
}

<AuthorizeView Policy="IsSuperAdmin">
    <Authorized>
        @if (showLoading)
        {
            <span class="loading"></span>
        }
        else
        {
            if (mode == 0)
            {
                <div class="row">
                    <div class="col-12 mb-2">
                        <div class="text-end">
                            <button class="btn btn-primary btn-smc" @onclick="AddUserAccount">
                                <span class="oi oi-plus"></span>
                            </button>
                            <button class="btn btn-primary btn-smc" @onclick="(() => EditUser())">
                                <span class="oi oi-pencil"></span>
                            </button>
                            <button class="btn btn-primary btn-smc" @onclick="(() => DeleteUser())">
                                <span class="oi oi-trash"></span>
                            </button>
                            <button class="btn btn-primary btn-smc" @onclick="ChangeUserPassword">
                                <span class="oi oi-key"></span>
                            </button>
                            <button class="btn btn-primary btn-smc" @onclick="(() => ReLoad())">
                                <span class="oi oi-reload"></span>
                            </button>
                        </div>
                    </div>
                </div>
                <div>
                    <SfGrid @ref="@_grid" DataSource="@UserAccountManager.UserList" AllowPaging="true" AllowSorting="true" AllowFiltering="true" AllowSelection="true">
                        <GridPageSettings PageSize="@pageSize"></GridPageSettings>
                        <GridSelectionSettings Type="SelectionType.Single" Mode="SelectionMode.Row"></GridSelectionSettings>
                        <GridEvents RowSelected="GetSelectedRecords" TValue="UserAccountDto"></GridEvents>
                        <GridColumns>
                            <GridColumn Field=@nameof(user.UserId) HeaderText="ID"></GridColumn>
                            <GridColumn Field=@nameof(user.UserName) HeaderText="User Name"></GridColumn>
                            <GridColumn Field=@nameof(user.Email) HeaderText="Email"></GridColumn>
                            <GridColumn Field=@nameof(user.UserRole) HeaderText="Role"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            }
            else if (mode == 1)
            {
                <div class="card">
                    <div class="card-header">Edit/Add User</div>
                    <div class="card-body">
                        <EditForm Model="user" OnValidSubmit="UpdateUserAccount" Context="formContext">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-6 mb-2">
                                    <label for="firstname">First name</label>
                                    <InputText id="firstname" @bind-Value="user.FirstName" class="form-control"></InputText>
                                    <ValidationMessage For="@(() => user.FirstName)" />
                                </div>
                                <div class="col-6 mb-2">
                                    <label for="lastname">Last name</label>
                                    <InputText id="lastname" @bind-Value="user.LastName" class="form-control"></InputText>
                                    <ValidationMessage For="@(() => user.LastName)" />
                                </div>
                                <div class="col-12 mb-2">
                                    <label for="displayname">Displayname</label>
                                    <InputText id="displayname" @bind-Value="user.DisplayName" class="form-control"></InputText>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6 mb-2">
                                    <label for="username">UserName</label>
                                    <InputText id="username" @bind-Value="user.UserName" class="form-control"></InputText>
                                    <ValidationMessage For="@(() => user.UserName)" />
                                </div>
                                <div class="col-6 mb-2">
                                    <label for="email">Email</label>
                                    <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
                                    <ValidationMessage For="@(() => user.Email)" />
                                </div>
                            </div>
                            @if (string.IsNullOrEmpty(user.UserId))
                            {
                                <div class="row">
                                    <div class="col-sm-6 mb-3">
                                        <label for="password">Password</label>
                                        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
                                        <ValidationMessage For="@(() => user.Password)" />
                                    </div>
                                    <div class="col-sm-6 mb-3">
                                        <label for="confirmPassword">Confirm Password</label>
                                        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
                                        <ValidationMessage For="@(() => user.ConfirmPassword)" />
                                    </div>
                                </div>
                            }

                            <div class="col-12 mb-2">
                                <label>User Role</label>
                                <InputSelect @bind-Value="user.UserRole" class="form-select">
                                    @foreach (var role in Enum.GetValues(typeof(Roles)))
                                    {
                                        <option value="@role">@role</option>
                                    }
                                </InputSelect>
                            </div>

                            <div class="row">
                                <div class="col-12 mb-2">
                                    <label for="notes">Notes</label>
                                    <InputTextArea id="notes" @bind-Value="user.Notes" class="form-control"></InputTextArea>
                                </div>
                            </div>

                            <div class="row">
                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <span class="oi oi-cloud-upload"></span> Save
                                    </button>
                                    <button class="btn btn-primary btn-sm" @onclick="CancelEdit">
                                        <span class="oi oi-action-undo"></span> Cancel
                                    </button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            }
            else if (mode == 2)
            {
                <div class="card">
                    <div class="card-header">Change User Password</div>
                    <div class="card-body">
                        <EditForm Model="changePasswordDto" OnValidSubmit="UpdateUserPassword" Context="formContext">
                            <DataAnnotationsValidator />
                            <div class="row">
                                <div class="col-6 mb-2">
                                    <label for="username">UserName</label>
                                    <InputText id="username" @bind-Value="changePasswordDto.UserName" class="form-control" readonly></InputText>
                                </div>
                                <div class="col-6 mb-2">
                                    <label for="email">Email</label>
                                    <InputText id="email" @bind-Value="changePasswordDto.Email" class="form-control" readonly></InputText>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-6 mb-3">
                                    <label for="password">Password</label>
                                    <InputText id="password" @bind-Value="changePasswordDto.Password" class="form-control" type="password" />
                                    <ValidationMessage For="@(() => changePasswordDto.Password)" />
                                </div>
                                <div class="col-sm-6 mb-3">
                                    <label for="confirmPassword">Confirm Password</label>
                                    <InputText id="confirmPassword" @bind-Value="changePasswordDto.ConfirmPassword" class="form-control" type="password" />
                                    <ValidationMessage For="@(() => changePasswordDto.ConfirmPassword)" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="text-end">
                                    <button type="submit" class="btn btn-primary btn-sm">
                                        <span class="oi oi-cloud-upload"></span> Save
                                    </button>
                                    <button class="btn btn-primary btn-sm" @onclick="CancelChangeUserPassword">
                                        <span class="oi oi-action-undo"></span> Cancel
                                    </button>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <p>You're not authorized to view this page.</p>
    </NotAuthorized>
</AuthorizeView>